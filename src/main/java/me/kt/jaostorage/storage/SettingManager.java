package me.kt.jaostorage.storage;

import me.kt.jaostorage.Main;
import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.entity.Player;

import java.util.List;
import java.util.UUID;

public class SettingManager {

    private final Main plugin;
    private final FileConfiguration config;

    public SettingManager(Main plugin) {
        this.plugin = plugin;
        this.config = plugin.getConfig();
    }

    // =========================================================================
    // üì¶ T√çNH NƒÇNG: T·ª± ƒë·ªông l∆∞u v√†o kho cho t·ª´ng ng∆∞·ªùi ch∆°i (autoStore)
    // =========================================================================

    // ‚úÖ Ki·ªÉm tra xem ng∆∞·ªùi ch∆°i ƒë√£ b·∫≠t ch·∫ø ƒë·ªô t·ª± l∆∞u kho ch∆∞a
    public boolean isAutoStoreEnabled(Player player) {
        return config.getBoolean("autostore." + player.getUniqueId(), false);
    }

    // ‚úÖ G√°n tr·∫°ng th√°i autoStore cho ng∆∞·ªùi ch∆°i (b·∫≠t/t·∫Øt)
    public void setAutoStore(Player player, boolean enabled) {
        UUID uuid = player.getUniqueId();
        config.set("autostore." + uuid, enabled);
        plugin.saveConfig();
    }

    // ‚úÖ ƒê·∫£o tr·∫°ng th√°i autoStore c·ªßa ng∆∞·ªùi ch∆°i (toggle)
    public boolean toggleAutoStore(Player player) {
        boolean newState = !isAutoStoreEnabled(player);
        setAutoStore(player, newState);
        return newState;
    }

    // =========================================================================
    // ‚öôÔ∏è H·ªñ TR·ª¢: ƒê·ªçc d·ªØ li·ªáu t·ª´ file config.yml (non-static, instance-based)
    // =========================================================================

    public boolean getBoolean(String path) {
        return config.getBoolean(path, false);
    }

    public String getString(String path) {
        return config.getString(path, "");
    }

    public List<String> getStringList(String path) {
        return config.getStringList(path);
    }

    public int getInt(String path) {
        return config.getInt(path, 0);
    }

    public double getDouble(String path) {
        return config.getDouble(path, 0.0);
    }
}